    # Computes pi to 999 hexadecimal digits. (This can be increased arbitrarily.)
    # Uses the BPB formula: https://en.wikipedia.org/wiki/Bailey%E2%80%93Borwein%E2%80%93Plouffe_formula.

PRINT 3 # 3 < pi < 4
LET N = 0
WHILE N < 1000
    # We compute a fraction R / P where the fractional part (i.e. R / P - floor(R / P))
    # approximates the value of the hexadecimal expansion starting after digit N.
    # For example, the expansion starts 0x3.243f,
    # so R / P - floor(R / P) will approximate 0x0.43f when N = 1.
    LET R = 0
    LET P = 4294967296

    # Add the first N + 1 terms of the infinite series
    LET K = 0
    WHILE K < N + 1
        LET A = K * 8 + 1
        LET B = K * 4 + 2
        LET C = K * 8 + 5
        LET D = K * 8 + 6
        # Use modular exponentiation to compute 16^(N - K) mod A, B, C, and D
        LET S = 4
        LET T = 1
        LET U = 1
        LET V = 1
        LET W = 16
        LET X = 16
        LET Y = 16
        LET Z = 16
        LET I = N - K
        WHILE I > 0
            LET J = I / 2
            IF J * 2 < I
                LET S = S * W
                LET S = S - S / A * A
                LET T = T * X
                LET T = T - T / B * B
                LET U = U * Y
                LET U = U - U / C * C
                LET V = V * Z
                LET V = V - V / D * D
            END IF
            LET I = J
            LET W = W * W
            LET W = W - W / A * A
            LET X = X * X
            LET X = X - X / B * B
            LET Y = Y * Y
            LET Y = Y - Y / C * C
            LET Z = Z * Z
            LET Z = Z - Z / D * D
        END WHILE

        LET R = R + P * S / A - P * T / B - P * U / C - P * V / D
        LET K = K + 1
    END WHILE

    # Add a few more additional terms if N is small, since they will still be significant
    LET S = P
    LET K = N + 1
    WHILE K < 6
        LET S = S / 16
        LET R = R + S * 4 / (K * 8 + 1)
                  - S     / (K * 4 + 2)
                  - S     / (K * 8 + 5)
                  - S     / (K * 8 + 6)
        LET K = K + 1
    END WHILE

    LET R = R - R / P * P
    IF R < 0
        LET R = R + P
    END IF
    PRINT R * 16 / P
    LET N = N + 1
END WHILE

#3
#2
#4
#3
#15
#6
#10
#8
#8
#8
#5
#10
#3
#0
#8
#13
#3
#1
#3
#1
#9
#8
#10
#2
#14
#0
#3
#7
#0
#7
#3
#4
#4
#10
#4
#0
#9
#3
#8
#2
#2
#2
#9
#9
#15
#3
#1
#13
#0
#0
#8
#2
#14
#15
#10
#9
#8
#14
#12
#4
#14
#6
#12
#8
#9
#4
#5
#2
#8
#2
#1
#14
#6
#3
#8
#13
#0
#1
#3
#7
#7
#11
#14
#5
#4
#6
#6
#12
#15
#3
#4
#14
#9
#0
#12
#6
#12
#12
#0
#10
#12
#2
#9
#11
#7
#12
#9
#7
#12
#5
#0
#13
#13
#3
#15
#8
#4
#13
#5
#11
#5
#11
#5
#4
#7
#0
#9
#1
#7
#9
#2
#1
#6
#13
#5
#13
#9
#8
#9
#7
#9
#15
#11
#1
#11
#13
#1
#3
#1
#0
#11
#10
#6
#9
#8
#13
#15
#11
#5
#10
#12
#2
#15
#15
#13
#7
#2
#13
#11
#13
#0
#1
#10
#13
#15
#11
#7
#11
#8
#14
#1
#10
#15
#14
#13
#6
#10
#2
#6
#7
#14
#9
#6
#11
#10
#7
#12
#9
#0
#4
#5
#15
#1
#2
#12
#7
#15
#9
#9
#2
#4
#10
#1
#9
#9
#4
#7
#11
#3
#9
#1
#6
#12
#15
#7
#0
#8
#0
#1
#15
#2
#14
#2
#8
#5
#8
#14
#15
#12
#1
#6
#6
#3
#6
#9
#2
#0
#13
#8
#7
#1
#5
#7
#4
#14
#6
#9
#10
#4
#5
#8
#15
#14
#10
#3
#15
#4
#9
#3
#3
#13
#7
#14
#0
#13
#9
#5
#7
#4
#8
#15
#7
#2
#8
#14
#11
#6
#5
#8
#7
#1
#8
#11
#12
#13
#5
#8
#8
#2
#1
#5
#4
#10
#14
#14
#7
#11
#5
#4
#10
#4
#1
#13
#12
#2
#5
#10
#5
#9
#11
#5
#9
#12
#3
#0
#13
#5
#3
#9
#2
#10
#15
#2
#6
#0
#1
#3
#12
#5
#13
#1
#11
#0
#2
#3
#2
#8
#6
#0
#8
#5
#15
#0
#12
#10
#4
#1
#7
#9
#1
#8
#11
#8
#13
#11
#3
#8
#14
#15
#8
#14
#7
#9
#13
#12
#11
#0
#6
#0
#3
#10
#1
#8
#0
#14
#6
#12
#9
#14
#0
#14
#8
#11
#11
#0
#1
#14
#8
#10
#3
#14
#13
#7
#1
#5
#7
#7
#12
#1
#11
#13
#3
#1
#4
#11
#2
#7
#7
#8
#10
#15
#2
#15
#13
#10
#5
#5
#6
#0
#5
#12
#6
#0
#14
#6
#5
#5
#2
#5
#15
#3
#10
#10
#5
#5
#10
#11
#9
#4
#5
#7
#4
#8
#9
#8
#6
#2
#6
#3
#14
#8
#1
#4
#4
#0
#5
#5
#12
#10
#3
#9
#6
#10
#2
#10
#10
#11
#1
#0
#11
#6
#11
#4
#12
#12
#5
#12
#3
#4
#1
#1
#4
#1
#14
#8
#12
#14
#10
#1
#5
#4
#8
#6
#10
#15
#7
#12
#7
#2
#14
#9
#9
#3
#11
#3
#14
#14
#1
#4
#1
#1
#6
#3
#6
#15
#11
#12
#2
#10
#2
#11
#10
#9
#12
#5
#5
#13
#7
#4
#1
#8
#3
#1
#15
#6
#12
#14
#5
#12
#3
#14
#1
#6
#9
#11
#8
#7
#9
#3
#1
#14
#10
#15
#13
#6
#11
#10
#3
#3
#6
#12
#2
#4
#12
#15
#5
#12
#7
#10
#3
#2
#5
#3
#8
#1
#2
#8
#9
#5
#8
#6
#7
#7
#3
#11
#8
#15
#4
#8
#9
#8
#6
#11
#4
#11
#11
#9
#10
#15
#12
#4
#11
#15
#14
#8
#1
#11
#6
#6
#2
#8
#2
#1
#9
#3
#6
#1
#13
#8
#0
#9
#12
#12
#15
#11
#2
#1
#10
#9
#9
#1
#4
#8
#7
#12
#10
#12
#6
#0
#5
#13
#14
#12
#8
#0
#3
#2
#14
#15
#8
#4
#5
#13
#5
#13
#14
#9
#8
#5
#7
#5
#11
#1
#13
#12
#2
#6
#2
#3
#0
#2
#14
#11
#6
#5
#1
#11
#8
#8
#2
#3
#8
#9
#3
#14
#8
#1
#13
#3
#9
#6
#10
#12
#12
#5
#0
#15
#6
#13
#6
#15
#15
#3
#8
#3
#15
#4
#4
#2
#3
#9
#2
#14
#0
#11
#4
#4
#8
#2
#10
#4
#8
#4
#2
#0
#0
#4
#6
#9
#12
#8
#15
#0
#4
#10
#9
#14
#1
#15
#9
#11
#5
#14
#2
#1
#12
#6
#6
#8
#4
#2
#15
#6
#14
#9
#6
#12
#9
#10
#6
#7
#0
#12
#9
#12
#6
#1
#10
#11
#13
#3
#8
#8
#15
#0
#6
#10
#5
#1
#10
#0
#13
#2
#13
#8
#5
#4
#2
#15
#6
#8
#9
#6
#0
#15
#10
#7
#2
#8
#10
#11
#5
#1
#3
#3
#10
#3
#6
#14
#14
#15
#0
#11
#6
#12
#1
#3
#7
#10
#3
#11
#14
#4
#11
#10
#3
#11
#15
#0
#5
#0
#7
#14
#15
#11
#2
#10
#9
#8
#10
#1
#15
#1
#6
#5
#1
#13
#3
#9
#10
#15
#0
#1
#7
#6
#6
#6
#12
#10
#5
#9
#3
#14
#8
#2
#4
#3
#0
#14
#8
#8
#8
#12
#14
#14
#8
#6
#1
#9
#4
#5
#6
#15
#9
#15
#11
#4
#7
#13
#8
#4
#10
#5
#12
#3
#3
#11
#8
#11
#5
#14
#11
#14
#14
#0
#6
#15
#7
#5
#13
#8
#8
#5
#12
#1
#2
#0
#7
#3
#4
#0
#1
#10
#4
#4
#9
#15
#5
#6
#12
#1
#6
#10
#10
#6
#4
#14
#13
#3
#10
#10
#6
#2
#3
#6
#3
#15
#7
#7
#0
#6
#1
#11
#15
#14
#13
#15
#7
#2
#4
#2
#9
#11
#0
#2
#3
#13
#3
#7
#13
#0
#13
#7
#2
#4
#13
#0
#0
#10
#1
#2
#4
#8
#13
#11
#0
#15
#14
#10
#13
#3
